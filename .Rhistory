setwd("/Users/maddieportrey/Desktop/code/STAT 348/AmazonEmployeeAccess")
library(tidyverse)
library(vroom)
library(tidymodels)
library(embed)
library(ranger)
library(doParallel)
amazonTrain <- vroom("./train.csv")
amazonTest <- vroom("./test.csv")
amazonTrain$ACTION <- as.factor(amazonTrain$ACTION)
my_recipe <- recipe(ACTION~., data = amazonTrain) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_other(all_nominal_predictors(), threshold = .001) %>%
#step_dummy(all_nominal_predictors()) %>%
step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION)) #%>%
my_mod <- rand_forest(mtry = tune(),
min_n = tune(),
trees = 500) %>%
set_engine("ranger") %>%
set_mode("classification")
amazon_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod)
my_mod <- logistic_reg(mixture = tune(),
penalty = tune()) %>%
set_engine("glmnet")
amazon_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod)
tuning_grid <- grid_regular(penalty(),
mixture(),
levels = 5)
folds <- vfold_cv(amazonTrain, v = 10, repeats = 1)
cl <- makePSOCKcluster(10)
registerDoParallel(cl)
CV_results <- amazon_workflow %>%
tune_grid(resamples = folds,
grid = tuning_grid,
metrics = metric_set(roc_auc))
my_recipe <- recipe(ACTION~., data = amazonTrain) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_other(all_nominal_predictors(), threshold = .001) %>%
#step_dummy(all_nominal_predictors()) %>%
step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION)) #%>%
my_mod <- rand_forest(mtry = tune(),
min_n = tune(),
trees = 500) %>%
set_engine("ranger") %>%
set_mode("classification")
amazon_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod)
tuning_grid <- grid_regular(mtry(range = c(1,9)),
min_n(),
levels = 5)
folds <- vfold_cv(amazonTrain, v = 10, repeats = 1)
cl <- makePSOCKcluster(10)
registerDoParallel(cl)
CV_results <- amazon_workflow %>%
tune_grid(resamples = folds,
grid = tuning_grid,
metrics = metric_set(roc_auc))
