library(tidyverse)
library(vroom)
library(tidymodels)
library(ggmosaic)
library(embed)
setwd("./AmazonEmployeeAccess")
amazonTrain <- vroom("./train.csv")
amazonTest <- vroom("./test.csv")
my_recipe <- recipe(ACTION~., data = amazonTrain) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_other(all_factor_predictors(), threshold = .01) %>%
step_dummy(all_nominal_predictors()) %>%
step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION))
my_mod <- logistic_reg() %>%
set_engine("glm")
amazon_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = myDataSet)
amazon_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = amazonTrain)
prep <- prep(my_recipe)
baked <- bake(prep, new_data = amazonTrain)
my_recipe <- recipe(ACTION~., data = amazonTrain) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_other(all_factor_predictors(), threshold = .01) %>%
step_dummy(all_nominal_predictors()) %>%
step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION)) %>%
step_mutate_at(all_numeric_predictors(), fn = factor)
prep <- prep(my_recipe)
baked <- bake(prep, new_data = amazonTrain)
my_recipe <- recipe(ACTION~., data = amazonTrain) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_other(all_factor_predictors(), threshold = .01) %>%
step_dummy(all_nominal_predictors()) %>%
step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION)) %>%
step_mutate_at(all_numeric_predictors(), fn = factor)
my_mod <- logistic_reg() %>%
set_engine("glm")
amazon_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = amazonTrain)
my_recipe <- recipe(ACTION~., data = amazonTrain) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_other(all_factor_predictors(), threshold = .01) %>%
step_dummy(all_nominal_predictors()) %>%
step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION)) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_mutate(ACTION=factor(ACTION, levels=c(0,1), labels=c("No", "Yes")))
my_recipe <- recipe(ACTION~., data = amazonTrain) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_other(all_factor_predictors(), threshold = .01) %>%
step_dummy(all_nominal_predictors()) %>%
step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION)) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_mutate(ACTION=factor(ACTION, levels=c(0,1), labels=c(0, 1)))
my_mod <- logistic_reg() %>%
set_engine("glm")
amazon_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = amazonTrain)
amazon_preds <- predict(amazon_workflow,
new_data = amazonTest,
type="class")
my_recipe <- recipe(ACTION~., data = amazonTrain) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_other(all_factor_predictors(), threshold = .01) %>%
step_dummy(all_nominal_predictors()) %>%
step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION)) %>%
step_mutate(ACTION=factor(ACTION, levels=c(0,1), labels=c(0, 1)))
amazonTrain <- vroom("./train.csv")
amazonTest <- vroom("./test.csv")
amazonTrain$ACTION <- as.factor(amazonTrain$ACTION)
amazonTest$ACTION <- as.factor(amazonTest$ACTION)
my_recipe <- recipe(ACTION~., data = amazonTrain) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_other(all_factor_predictors(), threshold = .01) %>%
step_dummy(all_nominal_predictors()) %>%
step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION))
my_mod <- logistic_reg() %>%
set_engine("glm")
amazon_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = amazonTrain)
amazon_preds <- predict(amazon_workflow,
new_data = amazonTest,
type="class")
preds_function <- function(preds) {
preds$.pred[is.na(preds$.pred)] <- 0
preds$.pred[preds$.pred < 0] <- 0
preds <- cbind(amazonTest$id, preds)
colnames(preds) <- c("Id","Action")
return(preds)
}
preds <- preds_function(amazon_preds)
preds_function <- function(preds) {
preds$.pred[is.na(preds$.pred_class)] <- 0
preds$.pred[preds$.pred_class < 0] <- 0
preds <- cbind(amazonTest$id, preds)
colnames(preds) <- c("Id","Action")
return(preds)
}
preds <- preds_function(amazon_preds)
preds_function <- function(preds) {
preds$.pred_class[is.na(preds$.pred_class)] <- 0
preds$.pred_class[preds$.pred_class < 0] <- 0
preds <- cbind(amazonTest$id, preds)
colnames(preds) <- c("Id","Action")
return(preds)
}
preds <- preds_function(amazon_preds)
preds_function <- function(preds) {
preds$.pred_class[is.na(preds$.pred_class)] <- 0
preds <- cbind(amazonTest$id, preds)
colnames(preds) <- c("Id","Action")
return(preds)
}
preds <- preds_function(amazon_preds)
View(preds)
my_recipe <- recipe(ACTION~., data = amazonTrain) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_other(all_factor_predictors(), threshold = .01) %>%
step_dummy(all_nominal_predictors()) %>%
step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION))
amazonTrain <- vroom("./train.csv")
amazonTest <- vroom("./test.csv")
amazonTrain$ACTION <- as.factor(amazonTrain$ACTION)
my_recipe <- recipe(ACTION~., data = amazonTrain) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_other(all_factor_predictors(), threshold = .01) %>%
step_dummy(all_nominal_predictors()) %>%
step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION))
my_mod <- logistic_reg() %>%
set_engine("glm")
amazon_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = amazonTrain)
amazon_preds <- predict(amazon_workflow,
new_data = amazonTest,
type="class")
View(amazon_preds)
preds_function <- function(preds) {
preds$.pred_class[is.na(preds$.pred_class)] <- 0
preds <- cbind(amazonTest$id, preds)
colnames(preds) <- c("Id","Action")
return(preds)
}
preds <- preds_function(amazon_preds)
vroom_write(preds, "amazon_predictions.csv", ",")
amazon_preds <- predict(amazon_workflow,
new_data = amazonTest,
type="prob")
preds_function <- function(preds) {
preds$.pred_class[is.na(preds$.pred_class)] <- 0
preds <- cbind(amazonTest$id, preds)
colnames(preds) <- c("Id","Action")
return(preds)
}
preds <- preds_function(amazon_preds)
View(amazon_preds)
my_recipe <- recipe(ACTION~., data = amazonTrain) %>%
step_mutate_at(all_numeric_predictors(), fn = factor) %>%
step_other(all_factor_predictors(), threshold = .01) %>%
step_dummy(all_nominal_predictors()) %>%
step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION)) %>%
step_mutate_at(all_numeric_predictors(), fn = factor)
my_mod <- logistic_reg() %>%
set_engine("glm")
amazon_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = amazonTrain)
amazon_preds <- predict(amazon_workflow,
new_data = amazonTest,
type="class")
preds_function <- function(preds) {
preds$.pred_class[is.na(preds$.pred_class)] <- 0
preds <- cbind(amazonTest$id, preds)
colnames(preds) <- c("Id","Action")
return(preds)
}
preds <- preds_function(amazon_preds)
View(preds)
amazon_preds <- predict(amazon_workflow,
new_data = amazonTest,
type="prob")
View(amazon_preds)
preds <- cbind(amazon_preds, amazonTest$id)
View(preds)
preds <- cbind(amazonTest$id, amazon_preds)
View(preds)
preds <- cbind(amazonTest$id, amazon_preds$.pred_1)
preds <- cbind(amazonTest$id, amazon_preds$.pred_1)
colnames(preds) <- c("Id","ACTION")
View(preds)
preds <- as.data.frame(preds)
View(preds)
vroom_write(preds, "amazon_predictions.csv", ",")
